{"ast":null,"code":"var _jsxFileName = \"/home/dheer/IIIT Banglore/Semester_2/SPE/MNC/mnc_ui/src/components/AvailableProjects.js\";\nimport React, { Component } from 'react';\nimport projectService from \"../services/projectService\";\nimport Card from \"reactstrap/es/Card\";\nimport CardBody from \"reactstrap/es/CardBody\";\nimport Row from \"reactstrap/es/Row\";\nimport Col from \"reactstrap/es/Col\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AvailableProjects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      projects: [],\n      currentProject: null,\n      currentIndex: -1\n    };\n    this.loadProjects = this.loadProjects.bind(this);\n    this.sendRequest = this.sendRequest.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadProjects(localStorage.getItem('current_user_id'));\n  }\n\n  loadProjects(id) {\n    projectService.getAvailableProjects(id).then(response => {\n      this.setState({\n        projects: response.data,\n        loaded: true\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  sendRequest(project, index) {\n    var data = {\n      empId: localStorage.getItem('current_user_id'),\n      projectId: project.projectId,\n      status: 'pending'\n    };\n    console.log(data);\n    projectService.makeRequest(data).then(response => {\n      console.log(response.data);\n      this.refreshList();\n      this.setState({\n        loaded: false,\n        message: \"The request was updated successfully!\"\n      });\n      alert('Request sent!');\n    }).catch(e => {\n      console.log(e);\n    });\n    console.log(this.state.currentProject);\n  }\n\n  refreshList() {\n    console.log('refresh list');\n    this.loadProjects(localStorage.getItem('current_user_id'));\n  }\n\n  render() {\n    if (!this.state.loaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this);\n    }\n\n    const {\n      projects,\n      currentIndex\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: projects && projects.map((project, index) => /*#__PURE__*/_jsxDEV(Card, {\n              outline: true,\n              color: \"info\",\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                className: \"list-group-item \" + (index === currentIndex ? \"active\" : \"\"),\n                onClick: () => this.sendRequest(project, index),\n                children: [\"Project ID : \", project.projectId, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 74\n                }, this), \"Name : \", project.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 55\n                }, this), \"Technology : \", project.technology, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 67\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click on a project to send a request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AvailableProjects;","map":{"version":3,"sources":["/home/dheer/IIIT Banglore/Semester_2/SPE/MNC/mnc_ui/src/components/AvailableProjects.js"],"names":["React","Component","projectService","Card","CardBody","Row","Col","AvailableProjects","constructor","props","state","loaded","projects","currentProject","currentIndex","loadProjects","bind","sendRequest","refreshList","componentDidMount","localStorage","getItem","id","getAvailableProjects","then","response","setState","data","console","log","catch","e","project","index","empId","projectId","status","makeRequest","message","alert","render","map","name","technology"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport projectService from \"../services/projectService\";\nimport Card from \"reactstrap/es/Card\"\nimport CardBody from \"reactstrap/es/CardBody\"\nimport Row from \"reactstrap/es/Row\";\nimport Col from \"reactstrap/es/Col\";\n\nclass AvailableProjects extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            loaded : false,\n            projects: [],\n            currentProject : null,\n            currentIndex: -1\n        }\n        this.loadProjects = this.loadProjects.bind(this)\n        this.sendRequest = this.sendRequest.bind(this)\n        this.refreshList = this.refreshList.bind(this)\n     }\n\n     componentDidMount(){\n         this.loadProjects(localStorage.getItem('current_user_id'))\n     }\n\n     loadProjects(id){\n        projectService.getAvailableProjects(id)\n            .then(response => {\n                this.setState({\n                    projects: response.data,\n                    loaded: true\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    sendRequest(project,index){\n        var data = {\n            empId: localStorage.getItem('current_user_id'),\n            projectId: project.projectId,\n            status: 'pending'\n        }\n\n        console.log(data)\n        projectService.makeRequest(data)\n            .then(response => {\n                console.log(response.data);\n                this.refreshList()\n                this.setState({\n                    loaded:false,\n                    message: \"The request was updated successfully!\"\n                });\n                alert('Request sent!')\n            })\n            .catch(e => {\n                console.log(e);\n            });\n\n        console.log(this.state.currentProject)\n    }\n\n    refreshList(){\n        console.log('refresh list')\n        this.loadProjects(localStorage.getItem('current_user_id'))\n    }\n\n    render(){\n\n        if(!this.state.loaded){\n            return(\n                <div>\n                    <h3>Loading...</h3>\n                </div>\n            )\n        }\n\n        const { projects, currentIndex} = this.state\n        return(\n            <div >\n\n                <Row>\n                    \n                    <Col md={12}>\n                        <ul className=\"list-group\">\n                        {projects &&\n                        projects.map((project, index) => (\n                                <Card  outline color=\"info\">\n                                    <CardBody\n                                        className={ \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")}\n                                        onClick={() => this.sendRequest(project, index)}\n                                        key={index}>\n                                        Project ID : {project.projectId} <br/>\n                                Name : {project.name} <br/>\n                                Technology : {project.technology} <br/> \n                                    </CardBody>\n                                </Card>\n                            ))}\n                        </ul>\n                        </Col>    \n                        \n                    \n                </Row>\n                <Row>\n                <Col md={4}></Col>\n                            <Col md={6}>\n                            <p>Click on a project to send a request</p>\n                            </Col>\n                        \n                        <Col md={3}></Col>\n                </Row>\n\n                </div>\n        )\n    }\n\n}\n\nexport default AvailableProjects"]},"metadata":{},"sourceType":"module"}