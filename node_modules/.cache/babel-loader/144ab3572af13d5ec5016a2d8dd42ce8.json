{"ast":null,"code":"var _jsxFileName = \"/home/dheer/IIIT Banglore/Semester_2/SPE/MNC/mnc_ui/src/components/ManagerChart.js\";\nimport React, { Component } from \"react\";\nimport projectService from \"../services/projectService\";\nimport { Chart } from \"react-chartjs-2\";\nimport Row from \"reactstrap/es/Row\";\nimport Col from \"reactstrap/es/Col\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DemoChart extends Component {\n  constructor(props) {\n    super(props);\n    this.generateChart = this.generateChart.bind(this);\n    this.retrieveProjects = this.retrieveProjects.bind(this);\n    this.state = {\n      projects: [],\n      currentTutorial: null,\n      currentIndex: -1,\n      searchTitle: \"\",\n      status: [],\n      tech: []\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveProjects();\n  }\n\n  retrieveProjects() {\n    projectService.getAll().then(response => {\n      this.setState({\n        projects: response.data\n      });\n      console.log('response data', response.data);\n      this.generateChart();\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  generateChart() {\n    console.log('from the state', this.state.projects);\n    this.setState({\n      status: this.state.projects.map(project => ({\n        status: project.status\n      })),\n      tech: this.state.projects.map(project => ({\n        technology: project.technology\n      }))\n    });\n    console.log('this is the result', this.state.result);\n    let active = 0;\n    let complete = 0;\n    let frontend = 0;\n    let backend = 0;\n    let devops = 0;\n    let count = [];\n\n    for (let i = 0; i < this.state.status.length; i++) {\n      count[i] = this.state.status[i].status;\n      if (this.state.status[i].status === 'active') active++;else if (this.state.status[i].status === 'complete') complete++;\n      if (this.state.tech[i].technology === 'frontend') frontend++;else if (this.state.tech[i].technology === 'backend') backend++;else if (this.state.tech[i].technology === 'devops') devops++;\n    }\n\n    console.log('count array : ', count);\n    console.log('active : ', active, '  complete: ', complete);\n    let myChart = document.getElementById('myChart').getContext('2d');\n    let chart = new Chart(myChart, {\n      type: \"pie\",\n      data: {\n        labels: ['active', 'complete'],\n        datasets: [{\n          label: 'count',\n          data: [active, complete],\n          backgroundColor: ['rgba(120, 202, 211)', 'rgba(179, 255, 204)'],\n          hoverBorderWidth: 2,\n          hoverBorderColor: 'black'\n        }]\n      },\n      options: {\n        title: {\n          display: true,\n          text: 'Status of projects',\n          fontSize: 25\n        },\n        legend: {\n          display: true,\n          position: 'right',\n          labels: {\n            fontColor: 'black'\n          }\n        },\n        layout: {\n          padding: {\n            left: 50,\n            right: 0,\n            top: 0,\n            bottom: 0\n          }\n        },\n        tooltips: {\n          enabled: false\n        }\n      }\n    }); // ---------------------\n\n    let techChart = document.getElementById('techChart').getContext('2d');\n    let tech_chart = new Chart(techChart, {\n      type: \"pie\",\n      data: {\n        labels: ['frontend', 'backend', 'devops'],\n        datasets: [{\n          label: 'count',\n          data: [frontend, backend, devops],\n          backgroundColor: ['rgba(120, 202, 211)', 'rgba(179, 255, 204)', 'rgb(37, 108, 116)'],\n          hoverBorderWidth: 2,\n          hoverBorderColor: 'black'\n        }]\n      },\n      options: {\n        title: {\n          display: true,\n          text: 'Status of projects',\n          fontSize: 25\n        },\n        legend: {\n          display: true,\n          position: 'right',\n          labels: {\n            fontColor: 'black'\n          }\n        },\n        layout: {\n          padding: {\n            left: 50,\n            right: 0,\n            top: 0,\n            bottom: 0\n          }\n        },\n        tooltips: {\n          enabled: false\n        }\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 5,\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              id: \"myChart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 5,\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              id: \"techChart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DemoChart;","map":{"version":3,"sources":["/home/dheer/IIIT Banglore/Semester_2/SPE/MNC/mnc_ui/src/components/ManagerChart.js"],"names":["React","Component","projectService","Chart","Row","Col","DemoChart","constructor","props","generateChart","bind","retrieveProjects","state","projects","currentTutorial","currentIndex","searchTitle","status","tech","componentDidMount","getAll","then","response","setState","data","console","log","catch","e","map","project","technology","result","active","complete","frontend","backend","devops","count","i","length","myChart","document","getElementById","getContext","chart","type","labels","datasets","label","backgroundColor","hoverBorderWidth","hoverBorderColor","options","title","display","text","fontSize","legend","position","fontColor","layout","padding","left","right","top","bottom","tooltips","enabled","techChart","tech_chart","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport projectService from \"../services/projectService\";\nimport {Chart} from \"react-chartjs-2\";\nimport Row from \"reactstrap/es/Row\";\nimport Col from \"reactstrap/es/Col\";\n\nclass DemoChart extends Component{\n\n    constructor(props) {\n        super(props);\n        this.generateChart = this.generateChart.bind(this);\n        this.retrieveProjects = this.retrieveProjects.bind(this);\n\n        this.state = {\n            projects: [],\n            currentTutorial: null,\n            currentIndex: -1,\n            searchTitle: \"\",\n            status : [],\n            tech: []\n        };\n    }\n\n     componentDidMount() {\n         this.retrieveProjects()\n\n    }\n\n    retrieveProjects() {\n        projectService.getAll()\n            .then(response => {\n                this.setState({\n                    projects: response.data\n                });\n                console.log('response data',response.data);\n                this.generateChart()\n            })\n            .catch(e => {\n                console.log(e);\n            });\n\n    }\n\n    generateChart(){\n        console.log('from the state',this.state.projects)\n        this.setState({\n            status: this.state.projects.map(project => ({status : project.status})),\n            tech: this.state.projects.map(project => ({technology : project.technology}))\n        })\n        console.log('this is the result',this.state.result)\n\n        let active = 0;\n        let complete = 0;\n        let frontend = 0;\n        let backend = 0;\n        let devops = 0;\n        let count = [];\n        for (let i = 0; i < this.state.status.length; i++) {\n            count[i] = this.state.status[i].status\n            if(this.state.status[i].status === 'active') active++;\n            else if(this.state.status[i].status === 'complete') complete++;\n\n            if(this.state.tech[i].technology === 'frontend') frontend++;\n            else if(this.state.tech[i].technology === 'backend') backend++;\n            else if(this.state.tech[i].technology === 'devops') devops++;\n        }\n        console.log('count array : ',count)\n        console.log('active : ',active,'  complete: ',complete)\n\n        let myChart = document.getElementById('myChart').getContext('2d')\n        let chart = new Chart(myChart,\n            {\n                type: \"pie\",\n                data:{\n                    labels: ['active','complete'],\n                    datasets: [{\n                        label: 'count',\n                        data: [active,complete],\n                        backgroundColor:['rgba(120, 202, 211)','rgba(179, 255, 204)'],\n                        hoverBorderWidth: 2,\n                        hoverBorderColor: 'black'\n                    }]\n                },\n                options:{\n                    title:{\n                        display: true,\n                        text: 'Status of projects',\n                        fontSize: 25\n                    },\n                    legend:{\n                        display: true,\n                        position: 'right',\n                        labels:{\n                            fontColor: 'black'\n                        }\n                    },\n                    layout:{\n                        padding:{\n                            left:50,\n                            right:0,\n                            top:0,\n                            bottom:0\n                        }\n                    },\n                    tooltips:{\n                        enabled: false\n                    }\n                }\n            })\n\n            // ---------------------\n\n            let techChart = document.getElementById('techChart').getContext('2d')\n            let tech_chart = new Chart(techChart,\n            {\n                type: \"pie\",\n                data:{\n                    labels: ['frontend','backend','devops'],\n                    datasets: [{\n                        label: 'count',\n                        data: [frontend,backend,devops],\n                        backgroundColor:['rgba(120, 202, 211)','rgba(179, 255, 204)','rgb(37, 108, 116)'],\n                        hoverBorderWidth: 2,\n                        hoverBorderColor: 'black'\n                    }]\n                },\n                options:{\n                    title:{\n                        display: true,\n                        text: 'Status of projects',\n                        fontSize: 25\n                    },\n                    legend:{\n                        display: true,\n                        position: 'right',\n                        labels:{\n                            fontColor: 'black'\n                        }\n                    },\n                    layout:{\n                        padding:{\n                            left:50,\n                            right:0,\n                            top:0,\n                            bottom:0\n                        }\n                    },\n                    tooltips:{\n                        enabled: false\n                    }\n                }\n            })\n\n    }\n\n    render() {\n        return(\n            <div>\n                <div className=\"container\">\n                    \n                    <Row>\n                        <br></br><br></br><br></br>\n                    </Row>\n                    <Row >\n                        <Col md={5} >\n                        <canvas id=\"myChart\"></canvas>        \n                        </Col>\n                        {/* <Col md={2}></Col> */}\n                        <Col md={5}>\n                        <canvas id=\"techChart\"></canvas>   \n                        </Col>    \n                    </Row> \n                    \n                    \n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default DemoChart"]},"metadata":{},"sourceType":"module"}