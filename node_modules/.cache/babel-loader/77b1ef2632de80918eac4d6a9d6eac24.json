{"ast":null,"code":"var _jsxFileName = \"/home/dheer/IIIT Banglore/Semester_2/SPE/MNC/mnc_ui/src/components/Requests.js\";\nimport React, { Component } from \"react\";\nimport projectService from \"../services/projectService\";\nimport Row from \"reactstrap/es/Row\";\nimport Col from \"reactstrap/es/Col\";\nimport Card from \"reactstrap/es/Card\";\nimport CardBody from \"reactstrap/es/CardBody\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Requests extends Component {\n  constructor(props) {\n    super(props);\n    this.retrieveRequests = this.retrieveRequests.bind(this);\n    this.updateRequest = this.updateRequest.bind(this);\n    this.approveRequest = this.approveRequest.bind(this);\n    this.rejectRequest = this.rejectRequest.bind(this);\n    this.state = {\n      requests: [],\n      currentRequest: null\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveRequests();\n  }\n\n  retrieveRequests() {\n    projectService.getRequests().then(response => {\n      this.setState({\n        requests: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  setActiveRequest(request, index) {\n    this.setState({\n      currentRequest: request,\n      currentIndex: index\n    });\n  }\n\n  updateRequest() {\n    projectService.updateRequest(this.state.currentRequest).then(response => {\n      console.log(response.data);\n      this.setState({\n        message: \"The request was updated successfully!\"\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  approveRequest() {\n    var data = {\n      empId: this.state.currentRequest.empId,\n      projectId: this.state.currentRequest.projectId,\n      status: \"approved\",\n      id: this.state.currentRequest.id\n    };\n    projectService.updateRequest(data).then(response => {\n      console.log(response.data);\n      this.setState({\n        message: \"The project was updated successfully!\"\n      });\n      alert('Request approved!');\n      this.props.history.push('/Requests');\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  rejectRequest() {\n    var data = {\n      empId: this.state.currentRequest.empId,\n      projectId: this.state.currentRequest.projectId,\n      status: \"rejected\",\n      id: this.state.currentRequest.id\n    };\n    projectService.updateRequest(data).then(response => {\n      console.log(response.data);\n      this.setState({\n        message: \"The project was updated successfully!\"\n      });\n      alert('Request rejected!');\n      this.props.history.push('/Requests');\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    const {\n      requests,\n      currentRequest,\n      currentIndex\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: requests && requests.map((request, index) => /*#__PURE__*/_jsxDEV(Card, {\n              outline: true,\n              color: \"info\",\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                className: \"list-group-item \" + (index === currentIndex ? \"active\" : \"\"),\n                onClick: () => this.setActiveRequest(request, index),\n                children: [\"Project ID : \", request.projectId, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 70\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: currentRequest ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: [\"Project ID: \", currentRequest.projectId, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: [\"Employee ID: \", currentRequest.empId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"badge badge-success\",\n                onClick: this.approveRequest,\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 30\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"badge badge-success\",\n                onClick: this.rejectRequest,\n                children: \"Reject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Click on a request to view details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Requests;","map":{"version":3,"sources":["/home/dheer/IIIT Banglore/Semester_2/SPE/MNC/mnc_ui/src/components/Requests.js"],"names":["React","Component","projectService","Row","Col","Card","CardBody","Requests","constructor","props","retrieveRequests","bind","updateRequest","approveRequest","rejectRequest","state","requests","currentRequest","componentDidMount","getRequests","then","response","setState","data","console","log","catch","e","setActiveRequest","request","index","currentIndex","message","empId","projectId","status","id","alert","history","push","render","map"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport projectService from \"../services/projectService\";\nimport Row from \"reactstrap/es/Row\";\nimport Col from \"reactstrap/es/Col\";\nimport Card from \"reactstrap/es/Card\"\nimport CardBody from \"reactstrap/es/CardBody\"\n\nclass Requests extends Component{\n\n    constructor(props) {\n        super(props);\n        this.retrieveRequests = this.retrieveRequests.bind(this)\n        this.updateRequest = this.updateRequest.bind(this)\n        this.approveRequest = this.approveRequest.bind(this)\n        this.rejectRequest = this.rejectRequest.bind(this)\n        this.state = {\n            requests: [],\n            currentRequest: null\n        }\n    }\n\n    componentDidMount() {\n        this.retrieveRequests();\n    }\n\n    retrieveRequests(){\n        projectService.getRequests()\n        .then(response => {\n            this.setState({\n                requests: response.data\n            });\n            console.log(response.data);\n        })\n        .catch(e => {\n            console.log(e);\n        })\n    }\n\n    setActiveRequest(request, index) {\n        this.setState({\n            currentRequest: request,\n            currentIndex: index\n        });\n    }\n\n    updateRequest(){\n        projectService.updateRequest(\n            this.state.currentRequest\n        )\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The request was updated successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    approveRequest(){\n        var data = {\n            empId: this.state.currentRequest.empId,\n            projectId: this.state.currentRequest.projectId,\n            status: \"approved\",\n            id: this.state.currentRequest.id\n        }\n        projectService.updateRequest(data)\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The project was updated successfully!\"\n                });\n                alert('Request approved!')\n                this.props.history.push('/Requests')\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    rejectRequest(){\n        var data = {\n            empId: this.state.currentRequest.empId,\n            projectId: this.state.currentRequest.projectId,\n            status: \"rejected\",\n            id: this.state.currentRequest.id\n        }\n        projectService.updateRequest(data)\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The project was updated successfully!\"\n                });\n                alert('Request rejected!')\n                this.props.history.push('/Requests')\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n\n\n    render() {\n        const { requests, currentRequest, currentIndex } = this.state;\n        return(\n            <div>\n\n<br/>\n                    <Row>\n                    \n                        <Col md={6}>\n                        <ul className=\"list-group\">\n                        {requests &&\n                        requests.map((request, index) => ( \n                            <Card  outline color=\"info\">\n                                <CardBody\n                                    className={\"list-group-item \" +(index === currentIndex ? \"active\" : \"\")}\n                                    onClick={() => this.setActiveRequest(request, index)}\n                                    key={index}>\n                                    Project ID : {request.projectId} <br/>\n                                </CardBody>\n                            </Card>\n\n                            \n                        ))}\n                    </ul>\n                        </Col>\n\n                        <Col md={6}>\n                            <div>\n                            {currentRequest ?(\n                        <div>\n                            \n                            <div>\n                                <h4>Project ID: {currentRequest.projectId} </h4>\n                            </div>\n                            <div>\n                                <h4>Employee ID: {currentRequest.empId}</h4>\n                                \n                            </div>\n                            \n                       \n                            <br/><br/>\n                        <button type=\"submit\" className=\"badge badge-success\" onClick={this.approveRequest}>\n                            Approve\n                        </button>\n                        <br/><br/>\n                        <button type=\"submit\" className=\"badge badge-success\" onClick={this.rejectRequest}>\n                            Reject\n                        </button>\n                        \n                    </div>):(\n                        <div>\n                        <br />\n                        <p>Click on a request to view details</p>\n                        </div>)}\n                            </div>        \n                        </Col>\n                    </Row>\n             \n\n\n            </div>\n        )\n    }\n\n}\n\nexport default Requests"]},"metadata":{},"sourceType":"module"}