{"ast":null,"code":"var _jsxFileName = \"/home/dheer/IIIT Banglore/Semester_2/SPE/MNC/mnc_ui/src/components/Login.js\";\nimport React, { Component } from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport TextField from '@material-ui/core/TextField';\nimport base_url from \"../api/bootapi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275,\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 30,\n    color: \"#24134e\"\n  },\n  pos: {\n    marginBottom: 12\n  }\n}));\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      user_type: \"\",\n      errorMessage: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    localStorage.clear();\n    console.log('login component');\n    let response = await fetch(`${base_url}` + '/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': '*/*'\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password,\n        user_type: this.state.user_type\n      })\n    });\n    let status = response.status;\n\n    if (status === 200) {\n      let responseJson = await response.json();\n      console.log('manager logged in! :', responseJson);\n      console.log('user type is : ', responseJson.user_type);\n      localStorage.setItem('current_user_id', responseJson.empId);\n      localStorage.setItem('current_user_type', responseJson.user_type);\n\n      if (responseJson.user_type === 'admin') {\n        this.props.history.push({\n          pathname: '/AdminDashboard'\n        });\n      } else if (responseJson.user_type === 'manager') {\n        this.props.history.push({\n          pathname: '/ManagerDashboard'\n        });\n      } else if (responseJson.user_type === 'dev') {\n        this.props.history.push({\n          pathname: '/DeveloperDashboard'\n        });\n      }\n    } else if (status === 404) {\n      this.setState({\n        errorMessage: true\n      });\n    } else {\n      this.props.history.push({\n        pathname: '/Error404',\n        message: 'Backend server is down'\n      });\n    }\n  }\n\n  validateForm() {\n    return this.state.username.length > 0 && this.state.password.length > 0;\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.root,\n              style: {\n                backgroundColor: \"#f2f3fa\",\n                marginTop: \"5em\",\n                padding: \"1em\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.title,\n                  variant: \"h5\",\n                  component: \"h2\",\n                  style: {\n                    color: \"#24134e\",\n                    fontWeight: 600\n                  },\n                  gutterBottom: true,\n                  children: \"Calvin and Hobbes Co.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"Username\",\n                  name: \"username\",\n                  type: \"text\",\n                  value: this.state.username,\n                  onChange: this.handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 43\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"Password\",\n                  name: \"password\",\n                  type: \"password\",\n                  value: this.state.password,\n                  onChange: this.handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  display: this.state.errorMessage ? \"block\" : \"none\"\n                },\n                children: \"Incorrect username or password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    margin: \"0.5em\"\n                  },\n                  variant: \"contained\",\n                  color: \"primary\",\n                  type: \"submit\",\n                  size: \"small\",\n                  disabled: !this.validateForm,\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles)(Login);","map":{"version":3,"sources":["/home/dheer/IIIT Banglore/Semester_2/SPE/MNC/mnc_ui/src/components/Login.js"],"names":["React","Component","Card","CardContent","Typography","CardActions","Button","Grid","withStyles","makeStyles","TextField","base_url","useStyles","theme","root","minWidth","margin","spacing","width","bullet","display","transform","title","fontSize","color","pos","marginBottom","Login","constructor","props","handleChange","event","name","value","target","setState","state","username","password","user_type","errorMessage","handleSubmit","bind","validateForm","preventDefault","stopPropagation","localStorage","clear","console","log","response","fetch","method","headers","body","JSON","stringify","status","responseJson","json","setItem","empId","history","push","pathname","message","length","render","classes","height","backgroundColor","marginTop","padding","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport TextField from '@material-ui/core/TextField';\nimport base_url from \"../api/bootapi\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 275,\n        '& > *': { margin: theme.spacing(1), width: '25ch' }\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 30,\n        color: \"#24134e\",\n    },\n    pos: {\n        marginBottom: 12,\n    },\n}));\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            user_type: \"\",\n            errorMessage: false\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.validateForm = this.validateForm.bind(this);\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        localStorage.clear()\n        console.log('login component')\n        let response = await fetch(`${base_url}` + '/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': '*/*'\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password,\n                user_type: this.state.user_type\n            })\n        });\n        let status = response.status;\n\n        if (status === 200) {\n            let responseJson = await response.json()\n            console.log('manager logged in! :', responseJson)\n            console.log('user type is : ', responseJson.user_type)\n\n            localStorage.setItem('current_user_id', responseJson.empId)\n            localStorage.setItem('current_user_type', responseJson.user_type)\n            if (responseJson.user_type === 'admin') {\n                this.props.history.push({\n                    pathname: '/AdminDashboard',\n                });\n            }\n            else if (responseJson.user_type === 'manager') {\n                this.props.history.push({\n                    pathname: '/ManagerDashboard',\n                });\n            }\n            else if (responseJson.user_type === 'dev') {\n                this.props.history.push({\n                    pathname: '/DeveloperDashboard',\n                });\n            }\n        }\n\n        else if (status === 404) {\n            this.setState({\n                errorMessage: true\n            })\n        } else {\n            this.props.history.push({\n                pathname: '/Error404',\n                message: 'Backend server is down'\n            });\n        }\n    }\n\n    validateForm() {\n        return this.state.username.length > 0 && this.state.password.length > 0;\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div style={{ height: \"100vh\" }} >\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item xs={12} sm={4} >\n                        <form onSubmit={this.handleSubmit} >\n                            <Card className={classes.root} style={{ backgroundColor: \"#f2f3fa\", marginTop: \"5em\", padding:\"1em\" }}>\n                                <CardContent >\n                                    <Typography\n                                        className={classes.title} variant=\"h5\" component=\"h2\"\n                                        style={{\n                                            color: \"#24134e\",\n                                            fontWeight: 600\n                                        }}\n                                        gutterBottom\n                                    >\n                                        Calvin and Hobbes Co.\n                                    </Typography>\n                                    <TextField id=\"standard-basic\"\n                                        label=\"Username\"\n                                        name=\"username\"\n                                        type=\"text\"\n                                        value={this.state.username}\n                                        onChange={this.handleChange}\n                                        required />\n                                    <br /><br />\n                                    <TextField id=\"standard-basic\"\n                                        label=\"Password\"\n                                        name=\"password\"\n                                        type=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.handleChange}\n                                        required />\n                                </CardContent>\n                                <h3 style={{ display: this.state.errorMessage ? \"block\" : \"none\" }}>\n                                    Incorrect username or password\n                                </h3>\n                                <CardActions>\n                                    <Button style={{ margin: \"0.5em\" }} variant=\"contained\" color=\"primary\" type=\"submit\" size=\"small\" disabled={!this.validateForm}>Login</Button>\n                                </CardActions>\n                            </Card>\n                        </form>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Login)"]},"metadata":{},"sourceType":"module"}