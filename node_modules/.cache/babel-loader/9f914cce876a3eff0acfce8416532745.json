{"ast":null,"code":"var _jsxFileName = \"/home/dheer/IIIT Banglore/Semester_2/SPE/MNC/mnc_ui/src/components/Register.js\";\nimport React, { Component } from \"react\";\nimport employeeService from '../services/employeeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      user_type: \"\",\n      id: null,\n      error_message: false\n    };\n    this.addUser = this.addUser.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.handleChangeUsername = this.handleChangeUsername.bind(this);\n  }\n\n  handleChangeUsername(e) {\n    const username = e.target.value;\n    this.setState(function (prevState) {\n      return { ...prevState.username,\n        username: username\n      };\n    });\n  }\n\n  validateForm() {\n    return this.state.username.length > 0 && this.state.password.length > 0 && this.state.user_type.length > 0;\n  }\n\n  addUser() {\n    console.log('username is :', this.state.username);\n    var data = {\n      username: this.state.username,\n      password: this.state.password,\n      user_type: this.state.user_type\n    };\n    employeeService.add(data).then(response => {\n      this.setState({\n        username: response.data.username,\n        password: response.data.password,\n        id: response.data.id,\n        submitted: true\n      });\n      if (response.data.username === null) this.setState({\n        error_message: true,\n        submitted: false\n      });\n      console.log('error message : ', this.state.error_message, response.data);\n      alert('User added!');\n      this.props.history.push({\n        pathname: '/AdminDashboard'\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"username\",\n            required: true,\n            onChange: this.handleChangeUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"password\",\n            required: true,\n            onChange: this.handleChange,\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"user_type\",\n            children: \"User Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"user_type\",\n            required: true,\n            onChange: this.handleChange,\n            name: \"user_type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addUser,\n          className: \"btn btn-success\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            display: this.state.error_message ? \"block\" : \"none\"\n          },\n          children: \"Username already exists!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            display: this.state.submitted ? \"block\" : \"none\"\n          },\n          children: \"User added!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/dheer/IIIT Banglore/Semester_2/SPE/MNC/mnc_ui/src/components/Register.js"],"names":["React","Component","employeeService","Register","constructor","props","handleChange","event","name","value","target","setState","state","username","password","user_type","id","error_message","addUser","bind","validateForm","handleChangeUsername","e","prevState","length","console","log","data","add","then","response","submitted","alert","history","push","pathname","catch","render","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport employeeService from '../services/employeeService'\nclass Register extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            user_type: \"\",\n            id: null,\n            error_message: false\n        }\n        this.addUser = this.addUser.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.validateForm = this.validateForm.bind(this);\n        this.handleChangeUsername = this.handleChangeUsername.bind(this)\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleChangeUsername(e) {\n        const username = e.target.value;\n        this.setState(function (prevState) {\n            return {\n\n                ...prevState.username,\n                username: username\n\n            };\n        });\n    }\n\n    validateForm() {\n        return this.state.username.length > 0 && this.state.password.length > 0 && this.state.user_type.length > 0;\n    }\n\n    addUser() {\n        console.log('username is :', this.state.username)\n        var data = {\n            username: this.state.username,\n            password: this.state.password,\n            user_type: this.state.user_type\n        }\n\n        employeeService.add(data)\n            .then(response => {\n                this.setState({\n                    username: response.data.username,\n                    password: response.data.password,\n                    id: response.data.id,\n                    submitted: true\n                });\n                if (response.data.username === null) this.setState({ error_message: true, submitted: false })\n                console.log('error message : ', this.state.error_message, response.data);\n                alert('User added!')\n                this.props.history.push({\n                    pathname: '/AdminDashboard',\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            })\n    }\n\n\n\n\n    render() {\n        return (\n            <div className=\"submit-form\">\n\n\n                <div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Username</label>\n\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"username\"\n                            required\n                            onChange={this.handleChangeUsername}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"password\"\n                            required\n                            onChange={this.handleChange}\n                            name=\"password\"\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"user_type\">User Type</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"user_type\"\n                            required\n                            onChange={this.handleChange}\n                            name=\"user_type\"\n                        />\n                    </div>\n\n\n\n                    <button onClick={this.addUser} className=\"btn btn-success\">\n                        Submit\n                        </button>\n\n                    <h3 style={{ display: this.state.error_message ? \"block\" : \"none\" }}>\n                        Username already exists!\n                        </h3>\n\n                    <p style={{ display: this.state.submitted ? \"block\" : \"none\" }}>User added!</p>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}